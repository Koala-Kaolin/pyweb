var docs = {};
docs.mapper = {"mapper": {"type": "module", "name": "mapper", "members": {"SocketReader": {"type": "class", "name": "SocketReader", "herit": ["object"], "members": {"__init__": {"type": "function", "name": "__init__", "return": null, "parameters": [{"name": "self", "annotation": "SocketReader", "doc": null}, {"name": "sock", "annotation": "socket", "doc": "#socket \u00e0 lire en tant que tableau"}], "doc": "\n        @param sock socket \u00e0 lire en tant que tableau\n        "}}, "doc": "\n    La socket devient une liste.\n    Stocke toutes les donn\u00e9es lues.\n    @warn A ne pas utiliser dans la d\u00e9claration d'une boucle.\n\n    reader = SocketReader(socket)\n    #lecture de 5 octets\n    print (reader[:5])\n    "}}, "doc": "\nModule outil pour transformer la lecture d'une socket en lecture de tableau.\n"}};
docs.tools = {"tools": {"type": "module", "name": "tools", "members": {"read_cookie": {"type": "function", "name": "read_cookie", "return": null, "parameters": [{"name": "headers", "doc": "#ent\u00eates de la requ\u00eate"}], "doc": "\n    Lit un cookie\n    @param headers ent\u00eates de la requ\u00eate\n    @return {name, value} ou None\n    "}, "answer": {"type": "function", "name": "answer", "return": null, "parameters": [{"name": "code", "value": "200", "doc": "#code HTTP"}, {"name": "headers", "value": "{}", "doc": "#ent\u00eates de la r\u00e9ponse"}, {"name": "mime", "value": "None", "doc": "#pour le format de la r\u00e9ponse"}, {"name": "charset", "value": "utf-8", "doc": "#encodage de la r\u00e9ponse"}, {"name": "body", "value": "", "doc": "#corps de la r\u00e9ponse en binaire"}, {"name": "callback", "value": "None", "annotation": "fonction", "doc": "#traitement post \u00e9mission HTTP callback(socket, callbackCtx)"}, {"name": "callbackCtx", "value": "None", "doc": "#contexte"}], "doc": "\n    Construit une r\u00e9ponse HTTP\n    @param code code HTTP\n    @param headers ent\u00eates de la r\u00e9ponse\n    @param mime pour le format de la r\u00e9ponse\n    @param charset encodage de la r\u00e9ponse\n    @param body corps de la r\u00e9ponse en binaire\n    @param callback traitement post \u00e9mission HTTP callback(socket, callbackCtx)\n    @param callbackCtx contexte\n    @return [code, headers, content, callback, callbackCtx]\n    "}, "readfile": {"type": "function", "name": "readfile", "return": null, "parameters": [{"name": "path", "doc": "#chemin du fichier"}], "doc": "\n    Lit le contenu d'un fichier texte\n    @param path chemin du fichier\n    @return contenu du fichier texte\n    "}, "tobytes": {"type": "function", "name": "tobytes", "return": null, "parameters": [{"name": "v", "doc": "#valeur \u00e0 convertir"}, {"name": "enc", "value": "utf-8", "doc": "#encodage pour les cha\u00eenes de caract\u00e8res"}], "doc": "\n    Convertit None, une cha\u00eene, un dictionnaire en binaire\n    @param v valeur \u00e0 convertir\n    @param enc encodage pour les cha\u00eenes de caract\u00e8res\n    @return binaire\n    "}, "json": {"type": "module", "name": "json"}, "write_cookie": {"type": "function", "name": "write_cookie", "return": null, "parameters": [{"name": "nam", "doc": "#nom du cookie"}, {"name": "val", "doc": "#valeur du cookoie"}, {"name": "hs", "value": "{}", "doc": "#dictionnaire des ent\u00eates \u00e0 enrichir"}, {"name": "secured", "value": "False", "doc": "#pour contraindre l'utilisation via https"}, {"name": "seconds", "value": "None", "doc": "#d\u00e9lai d\"expiration en secondes"}], "doc": "\n    Ecrit un cookie\n    @param nam nom du cookie\n    @param val valeur du cookoie\n    @param hs dictionnaire des ent\u00eates \u00e0 enrichir\n    @param secured pour contraindre l'utilisation via https\n    @param seconds d\u00e9lai d''expiration en secondes\n    "}}, "doc": "\nOutils\n"}};
docs.gui = {"gui": {"type": "module", "name": "gui", "members": {"stop": {"type": "function", "name": "stop", "return": null, "parameters": [], "doc": "\n    Arr\u00eat du serveur\n    "}, "App": {"type": "class", "name": "App", "herit": ["object"], "members": {"__init__": {"type": "function", "name": "__init__", "return": null, "parameters": [{"name": "self", "doc": null}, {"name": "config", "doc": "#read arguments"}, {"name": "stacksize", "value": "1000", "doc": "#taille max. de la stacktrace"}], "doc": "\n        Constructeur\n        @param config read arguments\n        @param stacksize taille max. de la stacktrace\n        "}, "cmd_stop": {"type": "function", "name": "cmd_stop", "return": null, "parameters": [{"name": "self", "doc": null}], "doc": "\n        Arr\u00eat du serveur\n        "}, "cmd_purge": {"type": "function", "name": "cmd_purge", "return": null, "parameters": [{"name": "self", "doc": null}], "doc": "\n        Remise \u00e0 z\u00e9ro de la zone de texte\n        "}, "cmd_start": {"type": "function", "name": "cmd_start", "return": null, "parameters": [{"name": "self", "doc": null}], "doc": "\n        D\u00e9marrage du serveur\n        "}}, "doc": "\n    Application tkinter de Pyweb\n    "}, "reloader": {"type": "module", "name": "reloader"}, "ConfigArgs": {"type": "class", "name": "ConfigArgs", "herit": ["object"], "members": {}, "doc": "\n    Class for parameters reading\n    "}, "argparse": {"type": "module", "name": "argparse"}, "main": {"type": "function", "name": "main", "return": null, "parameters": [], "doc": "\n    Main function\n    "}, "constants": {"type": "module", "name": "constants"}, "sys": {"type": "module", "name": "sys"}, "web": {"type": "module", "name": "web"}, "importlib": {"type": "module", "name": "importlib"}, "py3": {"type": "module", "name": "py3"}, "builtins": {"type": "module", "name": "builtins"}, "Buffer": {"type": "class", "name": "Buffer", "herit": ["object"], "members": {"__init__": {"type": "function", "name": "__init__", "return": null, "parameters": [{"name": "self", "doc": null}, {"name": "text", "doc": "#zone de texte"}, {"name": "main", "value": "True", "doc": "#si sortie standard sinon sortie d'erreur"}, {"name": "outfile", "value": "None", "doc": "#fichier de sortie ou None"}, {"name": "stacksize", "value": "1000", "doc": "#taille max. de la stacktrace"}], "doc": "\n        Constructeur\n        @param text zone de texte\n        @param main si sortie standard sinon sortie d'erreur\n        @param outfile fichier de sortie ou None\n        @param stacksize taille max. de la stacktrace\n        "}, "write": {"type": "function", "name": "write", "return": null, "parameters": [{"name": "self", "doc": null}, {"name": "st", "doc": "#texte \u00e0 ajouter"}], "doc": "\n        Ecrit\n        @param st texte \u00e0 ajouter\n        "}, "restore": {"type": "function", "name": "restore", "return": null, "parameters": [{"name": "self", "doc": null}], "doc": "\n        Lib\u00e8re la sortie standard et la sortie d'erreur\n        "}, "reset": {"type": "function", "name": "reset", "return": null, "parameters": [{"name": "self", "doc": null}], "doc": "\n        Nettoie la zone de texte\n        "}}, "doc": "\n    Gestion de la sortie standard et de la sortie d'erreur\n    "}, "tkinter.scrolledtext": {"type": "module", "name": "tkinter.scrolledtext"}, "re": {"type": "module", "name": "re"}, "tkinter": {"type": "module", "name": "tkinter"}, "threading": {"type": "module", "name": "threading"}, "_tkinter": {"type": "module", "name": "_tkinter"}, "start": {"type": "function", "name": "start", "return": null, "parameters": [{"name": "secured", "value": "False", "doc": "#si https sinon http"}, {"name": "port", "value": "8080", "doc": "#port"}, {"name": "test", "value": "False", "doc": "#si test \u00e0 g\u00e9n\u00e9rer"}, {"name": "chemin_js", "value": "www/test.js", "doc": "#chemin du fichier js de test"}], "doc": "\n    @param secured si https sinon http\n    @param port port\n    @param test si test \u00e0 g\u00e9n\u00e9rer\n    @param chemin_js chemin du fichier js de test\n    "}}, "doc": "\nInterface graphique de pyweb\n"}};
docs.iframe = {"iframe": {"type": "module", "name": "iframe", "members": {"writeMessage": {"type": "function", "name": "writeMessage", "return": null, "parameters": [{"name": "sock", "doc": "#la socket"}, {"name": "text", "doc": "#texte \u00e0 transmettre"}, {"name": "mask", "value": "[]", "doc": "#masque"}, {"name": "encoding", "value": "utf-8", "doc": "#encodage"}, {"name": "toClose", "value": "False", "doc": "#fermeture"}, {"name": "toPing", "value": "False", "doc": "#ping"}, {"name": "toPong", "value": "False", "doc": "#pong"}], "doc": "\n    Ecrit un message et l'envoie vers la socket\n    @param sock la socket\n    @param text texte \u00e0 transmettre\n    @param mask masque\n    @param encoding encodage\n    @param toClose fermeture\n    @param toPing ping\n    @param toPong pong\n    "}, "_hashlib": {"type": "module", "name": "_hashlib"}, "websocket_headers": {"type": "function", "name": "websocket_headers", "return": null, "parameters": [{"name": "headers", "doc": "#ent\u00eates HTTP pour r\u00e9cup\u00e9rer Sec-WebSocket-Key"}], "doc": "\n    Construit les ent\u00eates pour un accord d'ouverture de la websocket\n    @param headers ent\u00eates HTTP pour r\u00e9cup\u00e9rer Sec-WebSocket-Key\n    @return dictionnaire des ent\u00eates pour une r\u00e9ponse positive\n    "}, "readMessage": {"type": "function", "name": "readMessage", "return": null, "parameters": [{"name": "sock", "doc": "#la socket \u00e0 lire"}], "doc": "\n    Lit un message depuis la socket\n    @param sock la socket \u00e0 lire\n    @return message {data, fin:trame de fin, closed:fermeture, ping}\n    "}, "padd": {"type": "function", "name": "padd", "return": null, "parameters": [{"name": "array", "doc": "#tableau \u00e0 renseigner"}, {"name": "value", "doc": "#valeur \u00e0 additionner"}], "doc": "\n    Additionne la valeur dans le tableau [fort, faible]\n    @param array tableau \u00e0 renseigner\n    @param value valeur \u00e0 additionner\n    @return le tableau\n    "}, "toTextPayload": {"type": "function", "name": "toTextPayload", "return": null, "parameters": [{"name": "text", "doc": "#texte \u00e0 envoyer"}, {"name": "mask", "value": "[]", "doc": "#masque"}, {"name": "encoding", "value": "utf-8", "doc": "#encodage"}, {"name": "toClose", "value": "False", "doc": "#\u00e0 fermer"}, {"name": "toPing", "value": "False", "doc": "#ping"}, {"name": "toPong", "value": "False", "doc": "#pong"}], "doc": "\n    Construit une trame websocket (RFC 6455)\n    @param text texte \u00e0 envoyer\n    @param mask masque\n    @param encoding encodage\n    @param toClose \u00e0 fermer\n    @param toPing ping\n    @param toPong pong\n    @return message binaire\n    "}, "mapper": {"type": "module", "name": "mapper"}, "depad": {"type": "function", "name": "depad", "return": null, "parameters": [{"name": "array", "doc": "#tableau \u00e0 lire"}], "doc": "\n    R\u00e9cup\u00e8re la valeur depuis un tableau [fort, faible]\n    @param array tableau \u00e0 lire\n    @return le nombre calcul\u00e9\n    "}, "bvalid": {"type": "function", "name": "bvalid", "return": null, "parameters": [{"name": "val", "doc": "#valeur \u00e0 v\u00e9rifier"}, {"name": "mask", "doc": "#masque binaire"}], "doc": "\n    V\u00e9rifie que la valeur correspond au masque\n    @param val valeur \u00e0 v\u00e9rifier\n    @param mask masque binaire\n    @return \u00e9galit\u00e9\n    "}, "fromMessage": {"type": "function", "name": "fromMessage", "return": null, "parameters": [{"name": "buffer", "doc": "#trame \u00e0 lire (sous la forme d'un tableau)"}], "doc": "\n    D\u00e9code une trame websocket (RFC 6455).\n    @param buffer trame \u00e0 lire (sous la forme d'un tableau)\n    @return message {data, fin:trame de fin, closed:fermeture, ping}\n    "}, "base64": {"type": "module", "name": "base64"}}, "doc": "\nGestion des trames Websockets (RFC 6455)\n\nM\u00e9thodes \u00e0 utiliser:\n    websocket_headers\n    readMessage\n    writeMessage\n"}};
docs.py3 = {"py3": {"type": "module", "name": "py3", "members": {"sys": {"type": "module", "name": "sys"}, "finish": {"type": "function", "name": "finish", "return": null, "parameters": [], "doc": "\n    Arret du serveur\n    "}, "run": {"type": "function", "name": "run", "return": {"name": "return", "annotation": "blocking", "doc": null}, "parameters": [{"name": "core", "value": "<web.Core object at 0xb70b684c>", "doc": "#dictionnaire des actions"}, {"name": "server_class", "value": "<class 'py3.ThreadedServer'>", "annotation": "classe", "doc": "#serveur"}, {"name": "handler_class", "value": "<class 'py3.MyHttpHandler'>", "annotation": "classe", "doc": "#r\u00e9ceptionneur des requ\u00eates"}, {"name": "port", "value": "8000", "doc": "#port s\u00e9curi\u00e9 ou non"}, {"name": "secured", "value": "False", "annotation": "boolean", "doc": "#s\u00e9curis\u00e9"}, {"name": "certfile", "value": "run/certificate.crt", "doc": "#certificat (n\u00e9cesssaire si secured == True)"}, {"name": "keyfile", "value": "run/privateKey.key", "doc": "#cl\u00e9 priv\u00e9e (n\u00e9cesssaire si secured == True)"}], "doc": "\n    Lancement du serveur\n    @param core dictionnaire des actions\n    @param server_class serveur\n    @param handler_class r\u00e9ceptionneur des requ\u00eates\n    @param port port s\u00e9curi\u00e9 ou non\n    @param secured s\u00e9curis\u00e9\n    @param certfile certificat (n\u00e9cesssaire si secured == True)\n    @param keyfile cl\u00e9 priv\u00e9e (n\u00e9cesssaire si secured == True)\n    "}, "socketserver": {"type": "module", "name": "socketserver"}, "http": {"type": "module", "name": "http"}, "iframe": {"type": "module", "name": "iframe"}, "os": {"type": "module", "name": "os"}, "web": {"type": "module", "name": "web"}, "urllib": {"type": "module", "name": "urllib"}, "ThreadedServer": {"type": "class", "name": "ThreadedServer", "herit": ["socketserver.ThreadingMixIn", "socketserver.TCPServer", "socketserver.BaseServer", "object"], "members": {"socketserver": {"type": "module", "name": "socketserver"}, "find": {"type": "function", "name": "find", "return": null, "parameters": [{"name": "self", "doc": null}, {"name": "method", "doc": "#m\u00e9thode de la requ\u00eate HTTP"}, {"name": "uri", "doc": "#URL de la requ\u00eate HTTP"}], "doc": "\n        Recherche l'action (callback) pour r\u00e9pondre \u00e0 la requ\u00eate\n        @use self.core dictionnaire des actions\n        @param method m\u00e9thode de la requ\u00eate HTTP\n        @param uri URL de la requ\u00eate HTTP\n        @return action\n        "}, "setcore": {"type": "function", "name": "setcore", "return": null, "parameters": [{"name": "self", "doc": null}, {"name": "core", "doc": "#dictionnaire des actions"}], "doc": "\n        Positionne le dictionnaire des actions\n        @param core dictionnaire des actions\n        "}, "socket": {"type": "module", "name": "socket"}}, "doc": "Serveur multi-threaded"}, "re": {"type": "module", "name": "re"}, "json": {"type": "module", "name": "json"}, "threading": {"type": "module", "name": "threading"}, "ssl": {"type": "module", "name": "ssl"}, "base64": {"type": "module", "name": "base64"}, "MyHttpHandler": {"type": "class", "name": "MyHttpHandler", "herit": ["http.server.SimpleHTTPRequestHandler", "http.server.BaseHTTPRequestHandler", "socketserver.StreamRequestHandler", "socketserver.BaseRequestHandler", "object"], "members": {"http.server": {"type": "module", "name": "http.server"}, "http.client": {"type": "module", "name": "http.client"}, "do_POST": {"type": "function", "name": "do_POST", "return": null, "parameters": [{"name": "self", "doc": null}], "doc": "Redirig\u00e9 vers execute"}, "socketserver": {"type": "module", "name": "socketserver"}, "do_DELETE": {"type": "function", "name": "do_DELETE", "return": null, "parameters": [{"name": "self", "doc": null}], "doc": "Redirig\u00e9 vers execute"}, "__init__": {"type": "function", "name": "__init__", "return": null, "parameters": [{"name": "self", "doc": null}, {"name": "socket", "doc": "#socket ouverte pour le client ayant \u00e9mis la requ\u00eate"}, {"name": "client_address", "doc": "#adresse du client (IP et port)"}, {"name": "server", "doc": "#serveur multi-threaded"}], "doc": "\n        @param socket socket ouverte pour le client ayant \u00e9mis la requ\u00eate\n        @param client_address adresse du client (IP et port)\n        @param server serveur multi-threaded\n        "}, "execute": {"type": "function", "name": "execute", "return": null, "parameters": [{"name": "self", "doc": null}, {"name": "method", "doc": "#GET, POST, PUT ou DELETE"}], "doc": "\n        @param method GET, POST, PUT ou DELETE\n        "}, "do_PUT": {"type": "function", "name": "do_PUT", "return": null, "parameters": [{"name": "self", "doc": null}], "doc": "Redirig\u00e9 vers execute"}, "do_GET": {"type": "function", "name": "do_GET", "return": null, "parameters": [{"name": "self", "doc": null}], "doc": "Redirig\u00e9 vers execute"}, "send": {"type": "function", "name": "send", "return": null, "parameters": [{"name": "self", "doc": null}, {"name": "codehsbody", "doc": "#r\u00e9ponse sous la forme d'une liste"}], "doc": "\n        @param codehsbody r\u00e9ponse sous la forme d'une liste\n            [code_http, dictionnaire_entetes, contenu_binaire,\n                None/fonction_postemission, None/contexte_postemission]\n            avec fonction_postemission(socket_client, contexte_postem)\n        "}}, "doc": "\n    R\u00e9ceptionneur des requ\u00eates\n    "}}, "doc": "\nServeur HTTP\n"}};
docs.web = {"web": {"type": "module", "name": "web", "members": {"core": {"type": "object", "name": "core", "class": "web.Core"}, "jsonCodec": {"type": "object", "name": "jsonCodec", "class": "web.HttpConverter"}, "instanciate_core": {"type": "function", "name": "instanciate_core", "return": null, "parameters": [], "doc": "\n    @return instance de Core\n    "}, "doc": {"type": "module", "name": "doc"}, "iframe": {"type": "module", "name": "iframe"}, "websocket": {"type": "function", "name": "websocket", "return": null, "parameters": [{"name": "callback", "doc": "#fonction de r\u00e9ception de l'\u00e9v\u00e9nement"}], "doc": "\n    Annotation de d\u00e9claration d'un gestionnaire d'\u00e9v\u00e9nements de websocket.\n    callback(contexte, donn\u00e9es)\n        ouverture : donn\u00e9es = True\n        fermeture : donn\u00e9es = False\n        message : donn\u00e9es = str\n        contexte : fourni en tant que retour de l'action\n            (si None pas d'appel \u00e0 la callbac)\n    @param callback fonction de r\u00e9ception de l'\u00e9v\u00e9nement\n    @return gestionnaire de websocket\n    "}, "Core": {"type": "class", "name": "Core", "herit": ["object"], "members": {"find": {"type": "function", "name": "find", "return": null, "parameters": [{"name": "self", "doc": null}, {"name": "method", "doc": "#m\u00e9thode de la requ\u00eate HTTP"}, {"name": "uri", "doc": "#URL de la req\u00eate"}], "doc": "\n        Cherche et retourne la premi\u00e8re action compatible avec la requ\u00eate\n        @param method m\u00e9thode de la requ\u00eate HTTP\n        @param uri URL de la req\u00eate\n        @return (action, dictionnaire des param\u00e8tres de l'URL)\n        "}, "get_parameters": {"type": "function", "name": "get_parameters", "return": null, "parameters": [{"name": "self", "doc": null}, {"name": "_action", "doc": "#action"}, {"name": "converter", "doc": "#ne sert \u00e0 rien"}], "doc": "\n        [{name, type, pattern, default?}*]\n        @param _action action\n        @param converter ne sert \u00e0 rien\n        @return liste des param\u00e8tres sans les 2 premiers\n        "}, "declare": {"type": "function", "name": "declare", "return": null, "parameters": [{"name": "self", "doc": null}, {"name": "action_name", "doc": "#nom de la fonction"}, {"name": "method", "doc": "#\"GET\", \"POST\", \"PUT\", \"DELETE\""}, {"name": "expr", "doc": "#expression r\u00e9guli\u00e8re pour d\u00e9tection des param\u00e8tres"}, {"name": "pars", "doc": "#nom des param\u00e8tres"}, {"name": "act", "doc": "#fonction \u00e0 appeler"}, {"name": "uri", "doc": "#mod\u00e8le d'URI"}, {"name": "test", "doc": "#informations pour la g\u00e9n\u00e9ration de tests"}, {"name": "doc", "doc": "#documentation de la fonction"}], "doc": "\n        Ajoute une action\n            @param action_name nom de la fonction\n            @param method ''GET'', ''POST'', ''PUT'', ''DELETE''\n            @param expr expression r\u00e9guli\u00e8re pour d\u00e9tection des param\u00e8tres\n            @param pars nom des param\u00e8tres\n            @param act  fonction \u00e0 appeler\n            @param uri  mod\u00e8le d'URI\n            @param test informations pour la g\u00e9n\u00e9ration de tests\n            @param doc documentation de la fonction\n        "}, "__init__": {"type": "function", "name": "__init__", "return": null, "parameters": [{"name": "self", "doc": null}], "doc": "\n        Utilise une liste pour g\u00e9rer l'ordre de d\u00e9claration des actions\n        "}, "http": {"type": "function", "name": "http", "return": null, "parameters": [{"name": "self", "doc": null}, {"name": "method", "doc": "#GET, PUT, DELETE, POST, .*"}, {"name": "uri", "doc": "#URL avec des patterns (/chemin/{fichier}\\.{extension})"}, {"name": "test", "value": "[]", "doc": "#liste d'informations pour la g\u00e9n\u00e9ration des tests"}, {"name": "converter", "value": "<web.HttpConverter object at 0xb6bee26c>", "doc": "#ne sert \u00e0 rien"}], "doc": "\n        Annotation de d\u00e9claration d'une action dans le core\n        @param method GET, PUT, DELETE, POST, .*\n        @param uri URL avec des patterns (/chemin/{fichier}\\.{extension})\n        @param test liste d'informations pour la g\u00e9n\u00e9ration des tests\n        @param converter ne sert \u00e0 rien\n        @return action\n        "}, "control_parameter": {"type": "function", "name": "control_parameter", "return": null, "parameters": [{"name": "self", "doc": null}, {"name": "nam", "doc": "#nom du param\u00e8tre"}, {"name": "typ", "doc": "#type"}, {"name": "patt", "doc": "#pattern"}, {"name": "val", "doc": "#valeur \u00e0 tester"}], "doc": "\n        Controle la valeur d'un param\u00e8tre en fonction de son pattern\n        et de son type num\u00e9rique (number)\n        @param nam nom du param\u00e8tre\n        @param typ type\n        @param patt pattern\n        @param val valeur \u00e0 tester\n        "}, "reset": {"type": "function", "name": "reset", "return": null, "parameters": [{"name": "self", "doc": null}], "doc": "\n        R\u00e9initialise l'objet.\n        Evite les conflits de d\u00e9claration.\n        "}, "prepare_test": {"type": "function", "name": "prepare_test", "return": null, "parameters": [{"name": "self", "doc": null}, {"name": "test", "value": "False", "doc": "#si les tests doivent \u00eatre g\u00e9n\u00e9r\u00e9s"}, {"name": "chemin_js", "value": "www/test.js", "doc": "#chemin de g\u00e9n\u00e9ration du test"}], "doc": "\n        Initialise le fichier javsacript de description des test\n        pour les actions d\u00e9clar\u00e9es\n        @param test si les tests doivent \u00eatre g\u00e9n\u00e9r\u00e9s\n        @param chemin_js chemin de g\u00e9n\u00e9ration du test\n        "}, "get_infotest": {"type": "function", "name": "get_infotest", "return": null, "parameters": [{"name": "self", "doc": null}], "doc": "\n        Fournit les informations pou l'\u00e9tablissement de tests\n        "}}, "doc": "\n    Dictionnaire des actions\n    "}, "HttpConverter": {"type": "class", "name": "HttpConverter", "herit": ["object"], "members": {"__init__": {"type": "function", "name": "__init__", "return": null, "parameters": [{"name": "self", "doc": null}, {"name": "nam", "doc": "#nom du codec"}, {"name": "params", "doc": "#liste des param\u00e8tres requis"}, {"name": "fin", "doc": "#fonction de conversion en entr\u00e9e"}, {"name": "fout", "doc": "#fonction de conversion en sortie"}], "doc": "\n        @param nam nom du codec\n        @param params liste des param\u00e8tres requis\n        @param fin fonction de conversion en entr\u00e9e\n        @param fout fonction de conversion en sortie\n        "}, "missing": {"type": "function", "name": "missing", "return": null, "parameters": [{"name": "self", "doc": null}, {"name": "liste", "doc": "#parm\u00e8tres re\u00e7ues"}], "doc": "\n        Calcule la liste des param\u00e8tres manquants\n        @param liste parm\u00e8tres re\u00e7ues\n        @return liste des param\u00e8tres requis et non re\u00e7us\n        "}, "encode": {"type": "function", "name": "encode", "return": null, "parameters": [{"name": "self", "doc": null}, {"name": "data", "doc": "#donn\u00e9e \u00e0 encoder"}], "doc": "\n        @param data donn\u00e9e \u00e0 encoder\n        @return r\u00e9sultat de l'encodage\n        "}, "decode": {"type": "function", "name": "decode", "return": null, "parameters": [{"name": "self", "doc": null}, {"name": "data", "doc": "#donn\u00e9e \u00e0 d\u00e9coder"}], "doc": "\n        @param data donn\u00e9e \u00e0 d\u00e9coder\n        @return r\u00e9sultat du d\u00e9codage\n        "}}, "doc": "\n    Traite les conversions en entr\u00e9e et en sortie\n    "}, "inspect": {"type": "module", "name": "inspect"}, "re": {"type": "module", "name": "re"}, "json": {"type": "module", "name": "json"}, "noCodec": {"type": "object", "name": "noCodec", "class": "web.HttpConverter"}}, "doc": "\nModule de gestion des actions et des websockets\n"}};
docs.reloader = {"reloader": {"type": "module", "name": "reloader", "members": {"importlib": {"type": "module", "name": "importlib"}, "os": {"type": "module", "name": "os"}, "Surveillant": {"type": "class", "name": "Surveillant", "herit": ["threading.Thread", "object"], "members": {"__init__": {"type": "function", "name": "__init__", "return": null, "parameters": [{"name": "self", "doc": null}, {"name": "laps", "value": "1", "doc": "#temps d'attente en secondes entre chaque v\u00e9rification"}], "doc": "\n        @param laps temps d'attente en secondes entre chaque v\u00e9rification\n        "}, "verifie": {"type": "function", "name": "verifie", "return": null, "parameters": [{"name": "self", "doc": null}], "doc": "\n        V\u00e9rifie et charge le modules python modifi\u00e9s dans le r\u00e9pertoire courant\n        "}, "run": {"type": "function", "name": "run", "return": null, "parameters": [{"name": "self", "doc": null}], "doc": "\n        Usage indirect par la fonction start\n        "}, "lit": {"type": "function", "name": "lit", "return": null, "parameters": [{"name": "self", "doc": null}], "doc": "\n        Permet de lire les lignes de la sortie standard.\n        Sortie d\u00e8s la premi\u00e8re ligne vide re\u00e7ue.\n        "}, "threading": {"type": "module", "name": "threading"}}, "doc": "\n    Thread pour le rechargement des modules python du r\u00e9pertoire courant\n    "}, "sys": {"type": "module", "name": "sys"}, "time": {"type": "module", "name": "time"}, "threading": {"type": "module", "name": "threading"}}, "doc": "Module permettant de recherger les modules pythons modifi\u00e9s\ndans le r\u00e9pertoire courant\n"}};
docs.doc = {"doc": {"type": "module", "name": "doc", "members": {"parcours": {"type": "function", "name": "parcours", "return": null, "parameters": [{"name": "arbo", "value": "{}", "annotation": "map", "doc": "#objet conteneur"}, {"name": "cmod", "value": "None", "annotation": "module", "doc": "#module racine utilis\u00e9 pour \u00e9carter les objets import\u00e9s"}, {"name": "nam", "value": "None", "annotation": "string", "doc": "#nom r\u00e9cup\u00e9r\u00e9 depuis le conteneur"}, {"name": "obj", "value": "None", "annotation": "object", "doc": "#objet dont la documentation sera associ\u00e9e \u00e0 arbo[nam]"}], "doc": "\n    Calcule le dictionnaire de documentation du module fourni en tant que obj\n    @use inspect\n    @use docfunction\n    @param arbo objet conteneur\n    @param cmod module racine utilis\u00e9 pour \u00e9carter les objets import\u00e9s\n    @param nam nom r\u00e9cup\u00e9r\u00e9 depuis le conteneur\n    @param obj objet dont la documentation sera associ\u00e9e \u00e0 arbo[nam]\n    @return documentation sous la forme d'un dictionnaire\n    "}, "getparamdoc": {"type": "function", "name": "getparamdoc", "return": null, "parameters": [{"name": "doc", "annotation": "string", "doc": "#documentation de la fonction"}, {"name": "p", "annotation": "string", "doc": "#nom du param\u00e8tre"}, {"name": "typ", "value": "param", "annotation": "string", "doc": "#\"param\" ou \"return\""}], "doc": "\n    Retourne les informations sur un param\u00e8tre ou le retour d'une fonction\n    @param doc documentation de la fonction\n    @param p nom du param\u00e8tre\n    @param typ ''param'' ou ''return''\n    @return chaine concat\u00e9n\u00e9e\n    "}, "inspect": {"type": "module", "name": "inspect"}, "esc": {"type": "function", "name": "esc", "return": null, "parameters": [{"name": "st", "annotation": "string", "doc": "#cha\u00eene \u00e0 \u00e9chapper"}], "doc": "\n    Remplace les guillements par 2 apostrophes\n    @param st cha\u00eene \u00e0 \u00e9chapper\n    @return cha\u00eene \u00e9chapp\u00e9e\n    "}, "protect": {"type": "function", "name": "protect", "return": null, "parameters": [{"name": "act", "annotation": "fonction", "doc": "#fonction encapsulant"}, {"name": "_action", "annotation": "fonction", "doc": "#fonction encapsulant"}, {"name": "docannot", "value": "", "annotation": "string", "doc": "#documentation \u00e0 retenir de la fonction d'encapsulation"}], "doc": "\n    Permet de pr\u00e9server les informations n\u00e9cessaires\n    \u00e0 la documentation dans le cas d'un d\u00e9corateur.\n    Stocke les param\u00e8tres dans __arguments__\n    @param act fonction encapsulant\n    @param _action fonction encapsulant\n    @param docannot documentation \u00e0 retenir de la fonction d'encapsulation\n    @return None\n\ndef decorateur(parametres_decorateur):\n    def encapsulateur(fonction):\n        def substitu (*args, **argv):\n            return fonction (*args, **argv)\n        doc = ''''\n        if f.__doc__ is not None:\n            doc = f.__doc__\n        docannot = ''@InfoDecorateur %s'' % (parametres_decorateur)\n        protect(substitu, fonction, docannot)\n        return substitu\n    return encapsulateur\n    "}, "getargs": {"type": "function", "name": "getargs", "return": null, "parameters": [{"name": "_action", "annotation": "fonction", "doc": "#fonction"}], "doc": "\n    Construit la liste des infos sur le retour et les param\u00e8tres\n    {name, annotation, doc}\n    @use getparamdoc\n    @use inspect.getfullargspec\n    @param _action fonction\n    @return liste des infos sur les param\u00e8tres et le type retour\n    (premier \u00e9l\u00e9ment de la liste)\n    "}, "docfunction": {"type": "function", "name": "docfunction", "return": null, "parameters": [{"name": "nam", "annotation": "string", "doc": "#nom de la fonction"}, {"name": "obj", "annotation": "fonction", "doc": "#objet fonction"}], "doc": "\n    Retourne la documentation de la fonction.\n    Les param\u00e8tres sont r\u00e9cup\u00e9r\u00e9s directement\n    depuis la fonction ou __arguments__.\n    {type, name, return, parameters, doc}\n    @use getargs\n    @use protect\n    @param nam nom de la fonction\n    @param obj objet fonction\n    @return la documentation d'une fonction\n    "}, "os": {"type": "module", "name": "os"}, "json": {"type": "module", "name": "json"}}, "doc": "G\u00e9n\u00e8re la documentation des modules python pr\u00e9sents\ndans le r\u00e9pertoire courant et contruit un fichier doc/index_doc.js.\n\nRepose sur les modules\n@module inspect\n@module os\n@module json\n"}};
docs.clihttp = {"clihttp": {"type": "module", "name": "clihttp", "members": {"test_http2": {"type": "function", "name": "test_http2", "return": null, "parameters": [{"name": "secured", "doc": "#s\u00e9curis\u00e9"}, {"name": "trusted", "value": "False", "doc": "#de confiance"}], "doc": "\n    M\u00e9thode de test\n    @param secured s\u00e9curis\u00e9\n    @param trusted de confiance\n    "}, "test_http": {"type": "function", "name": "test_http", "return": null, "parameters": [{"name": "secured", "doc": "#s\u00e9curis\u00e9"}, {"name": "trusted", "value": "False", "doc": "#de confiance"}], "doc": "\n    M\u00e9thode de test\n    @param secured s\u00e9curis\u00e9\n    @param trusted de confiance\n    "}, "test_ws": {"type": "function", "name": "test_ws", "return": null, "parameters": [{"name": "secured", "doc": "#s\u00e9curis\u00e9"}, {"name": "trusted", "value": "False", "doc": "#de confiance"}], "doc": "\n    M\u00e9thode de test\n    @param secured s\u00e9curis\u00e9\n    @param trusted de confiance\n    "}, "getconnection": {"type": "function", "name": "getconnection", "return": null, "parameters": [{"name": "secured", "value": "False", "doc": "#vrai si https"}, {"name": "host", "value": "localhost", "doc": "#hote"}, {"name": "port", "value": "8080", "doc": "#port"}, {"name": "trusted", "value": "False", "doc": "#si le certificat SSL n'est pas connu par une autorit\u00e9"}], "doc": "\n    Fournit une connexion s\u00e9curis\u00e9e ou non\n    @param secured vrai si https\n    @param host hote\n    @param port port\n    @param trusted si le certificat SSL n'est pas connu par une autorit\u00e9\n    "}, "iframe": {"type": "module", "name": "iframe"}, "_hashlib": {"type": "module", "name": "_hashlib"}, "http": {"type": "module", "name": "http"}, "getmask": {"type": "function", "name": "getmask", "return": null, "parameters": [], "doc": "\n    G\u00e9n\u00e8re une liste al\u00e9atoire de 4 octets\n    "}, "ssl": {"type": "module", "name": "ssl"}, "base64": {"type": "module", "name": "base64"}, "random": {"type": "module", "name": "random"}}, "doc": "\nClient pour les tests\n"}};
